swagger: "2.0"
schemes:
  - https
host: dav-api.github.io
basePath: /leroapi/v1/jsonplace

info:
  contact:
    x-twitter: APP.Markup v1.0
  description: |

    APIs da Web. Repositório de especificações de API no formato OpenAPI.

    **Warning**: Se você deseja ser notificado sobre as alterações com antecedência, junte-se ao nosso [YOUTUBE channel](https://www.youtube.com/@decomtvs).
    
    ```markup

    <!DOCTYPE html>
    <html lang="en">
    <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>json VueJS</title>
    <link rel='stylesheet' href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" />
    </head>
    
    <body class="bg-dark">
    <div id="app">
    <table class="table table-dark table-striped">
      <thead>
        <tr>
          <th scope="col">Id</th>
          <th scope="col">Figuras</th>
          <th scope="col">Title</th>
          <th scope="col">Content</th>
        </tr>
      </thead>
      <tbody>
        <tr v-for="post in posts" :key="post.id">
          <th scope="row">{{ post.id }}</th>
          <th scope="row"><img v-bind:src="post.url + post.id" class="img-thumbnail"></th>
          <td>{{ post.title }}</td>
          <td>{{post.description}}</td>
        </tr>
      </tbody>
    </table>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.3/vue.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    
    <script>
    new Vue({
      el: "#app",
      data: {
        posts: []
      },
      created() {
        this.getData();
      },
      methods: {
        getData() {
          axios.get("https://dav-api.github.io/leroapi/v1/jsonplace/posts.json").then((posts) => {
            this.posts = posts.data;
            console.log(this.posts);
          });
        }
      }
    });
    </script>
    </body>
    </html>
    ```

  title: APP Markup v1.0
  version: "1.0"
  x-apisguru-categories:
    - open_data
  x-logo:
    url: https://avatars.githubusercontent.com/u/119436086?s=500&v=4
  x-origin:
    - format: swagger
      url: https://dav-api.github.io/leroapi/v1/jsonplace/posts.json
      version: "2.0"
  x-providerName: dav-api.github.io
  x-serviceName: APP.Markup
paths:
  /posts.json:
    get:
      parameters:
        - description: https://dav-api.github.io/leroapi/{{string}}.{{Esteção}}
          format: script
          in: query
          name: APIs
          required: true
          type: integer
        - description: /v1/jsonplace/posts
          format: url
          in: query
          name: string
          required: true
          type: integer
        - description: .json
          in: query
          name: Esteção
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: Especificações OpenAPI para cada API
          schema:
            $ref: "#/definitions/features"
      summary: Visualizações para cada API
definitions:
  features: 
    example:
      url: https://www.gravatar.com/avatar/?d=identicon&s=80&g=
      id: 1
      title: sunt aut facere repellat provident occaecati excepturi optio reprehenderit
      description: quia et suscipit suscipit recusandae consequuntur expedita et cum reprehenderit molestiae ut ut quas totam nostrum rerum est autem sunt rem eveniet architecto
      
      url: https://www.gravatar.com/avatar/?d=identicon&s=80&g=
      id: 2
      title: qui est esse
      description: est rerum tempore vitae sequi sint nihil reprehenderit dolor beatae ea dolores neque fugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis nqui aperiam non debitis possimus qui neque nisi nulla

externalDocs:
  description: objeto JSON com IDs de API
  url: https://dav-api.github.io/